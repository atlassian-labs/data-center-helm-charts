---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: io1-fast
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: io1
  iopsPerGB: "10"
  encrypted: "true"
  fsType: ext4
  
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-nfs-server-data-pvc
spec:
  storageClassName: io1-fast
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

kind: Service
apiVersion: v1
metadata:
  name: test-nfs-server
spec:
  type: LoadBalancer
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    role: test-nfs-server

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-nfs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      role: test-nfs-server
  template:
    metadata:
      labels:
        role: test-nfs-server
    spec:
      containers:
        - name: test-nfs-server
          image: atlassian/nfs-server-test:latest
          imagePullPolicy: Always
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
                - SYS_MODULE
          volumeMounts:
            - name: test-nfs-server-data-pvc
              mountPath: /srv/nfs
            - name: test-nfs-server-conf
              mountPath: /etc/exports.d/
      terminationGracePeriodSeconds: 60
      volumes:
        - name: test-nfs-server-data-pvc
          persistentVolumeClaim:
            claimName: test-nfs-server-data-pvc
        - name: test-nfs-server-conf
          configMap:
            name: test-nfs-server-conf

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: test-nfs-server-conf
data:
  share.exports: |-
    /srv/nfs *(rw,subtree_check,fsid=0,no_root_squash)