<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>data-center-helm-charts</artifactId>
    <groupId>com.atlassian.datacenter.k8s</groupId>
    <version>0.1.0-SNAPSHOT</version>

    <scm>
        <connection>scm:git:git@github.com:atlassian-labs/data-center-helm-charts.git</connection>
        <developerConnection>scm:git:git@github.com:atlassian-labs/data-center-helm-charts.git</developerConnection>
        <url>scm:git:git@github.com:atlassian-labs/data-center-helm-charts.git</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.11.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>0.10.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr-jackson</artifactId>
            <version>0.10.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-vavr</artifactId>
            <version>0.3.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <junit5.version>5.7.0</junit5.version>
        <assertj.version>3.17.2</assertj.version>

        <dockerImage.registry />
        <dockerImage.version />

        <helm.src.path>${project.basedir}/src/main/charts</helm.src.path>

        <helm.release.prefix>${user.name}</helm.release.prefix>

        <log.download.dir>${project.build.directory}/logs</log.download.dir>

        <kubernetes.target.namespace>dcng</kubernetes.target.namespace>

        <kubernetes.ingress.domain>internal.shared-dev.us-west-2.kitt-inf.net</kubernetes.ingress.domain>
        <kitt.ingress.domain>${kubernetes.ingress.domain}</kitt.ingress.domain>
        <eks.ingress.domain>dcngkube.bbsperf.com</eks.ingress.domain>

        <shared.pvc.name>efs-claim</shared.pvc.name>

        <persistence.enabled>true</persistence.enabled>

        <db.init.script.file/>

        <!-- The directory in which the helm (un)install script should look for the chart values files for integration testing -->
        <chart.testValues.basedir>${project.build.directory}/config</chart.testValues.basedir>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <testResources>
            <testResource>
                <!-- Apply filtering to the helm CI config, to substitute various properties -->
                <directory>src/test/config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/config</targetPath>
            </testResource>
        </testResources>
    </build>

    <profiles>
        <profile>
            <id>custom-docker-image</id>
            <properties>
                <dockerImage.registry>docker.atl-paas.net</dockerImage.registry>
                <dockerImage.version>${user.name}</dockerImage.version>
            </properties>
        </profile>

        <profile>
            <id>default-chart-values</id>
            <!--
            Activating this profile will cause the helm_install.sh script to *not* find the integration-test values.yaml
            files, resulting in the Helm chart being installed with the default values.
            -->
            <properties>
                <chart.testValues.basedir>dummy</chart.testValues.basedir>
            </properties>
        </profile>
    </profiles>

</project>
